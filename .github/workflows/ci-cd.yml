name: Docker CI/CD

on:
push:
branches: [ main ]

pull_request:
branches: [ main ]
jobs:
build-and-push:
runs-on: ubuntu-latest
services:
  mongo:
    image: mongo
    ports:
      - 27017:27017
    options: |
      --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
      --health-interval 10s
      --health-timeout 5s
      --health-retries 5


    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.GITHUB_velvine }}
        password: ${{ secrets.DOCKER_HUB_PAT }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: velvine/todo-flask:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - name: SSH and Pull Latest Docker Image
      env:
        EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$EC2_SSH_PRIVATE_KEY" | base64 --decode > ~/.ssh/id_ec2.pem
        chmod 600 ~/.ssh/id_ec2.pem
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_ec2.pem ubuntu@${{ secrets.34.228.37.236 }} 'docker pull velvine/todo-flask:latest && docker-compose up -d'
